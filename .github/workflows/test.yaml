name: Tests

# Only pushes and PRs against the main branch are built
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
    group: ${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

env:
    JAVA_VERSION: 17

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
      with:
        lfs: 'true'

    - uses: actions/setup-java@v5
      with:
        distribution: temurin
        java-version: ${{ env.JAVA_VERSION }}

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Check build health
      run: ./gradlew buildHealth --warning-mode=fail

    - name: Build APKs and run tests
      run: ./gradlew :app:assembleDebug :app:testDebugUnitTest :app:koverXmlReportDebug detekt --warning-mode=fail

    - name: Add coverage report to PR
      id: kover
      uses: mi-kas/kover-report@v1.9
      with:
        path: |
          ${{ github.workspace }}/app/build/reports/kover/reportDebug.xml
        token: ${{ secrets.COMMENTS_TOKEN }}
        title: Code Coverage
        update-comment: true
        min-coverage-overall: 10
        min-coverage-changed-files: 80
        coverage-counter-type: LINE


  instrumentedtests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
          api-level: [28, 31, 34, 35]

    steps:
      - uses: actions/checkout@v5

      # Setup the Ktor test backend
      - name: Start Ktor server
        run: |
          ./gradlew :server:installDist --no-daemon --stacktrace
          RECIPES_SECRET_KEY=TestKey ./server/build/install/server/bin/server &

      - name: Wait for Ktor server to start
        run: |
          for i in {1..30}; do
            curl --fail http://localhost:5000/health && exit 0
            sleep 2
          done
          echo "Ktor server failed to start" >&2
          exit 1

      ## Run the instrumented tests
      - name: Get AVD info
        uses: ./.github/actions/get-avd-info
        id: avd-info
        with:
            api-level: ${{ matrix.api-level }}

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - name: Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ steps.avd-info.outputs.arch }}
          target: ${{ steps.avd-info.outputs.target }}
          script: ./gradlew connectedCheck --stacktrace
        env:
          API_LEVEL: ${{ matrix.api-level }}

