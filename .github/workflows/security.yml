name: Security Analysis

# Run security checks on pushes and PRs to main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:
  # Run weekly security scans
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM UTC

concurrency:
  group: security-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  JAVA_VERSION: 17
  PYTHON_VERSION: '3.12'

jobs:
  # Kotlin Backend Security Analysis
  backend-security:
    name: Backend Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          # Fetch full history for better analysis
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run Backend Unit Tests
        run: |
          echo "::group::Backend Unit Tests"
          ./gradlew :backend:test
          echo "::endgroup::"

      - name: Run Detekt on Backend (Kotlin Static Analysis)
        run: |
          echo "::group::Detekt - Kotlin Backend Security Analysis"
          ./gradlew :backend:detekt --continue || true
          echo "::endgroup::"

      - name: Check for Hardcoded Secrets in Backend Code
        run: |
          echo "::group::Backend Secrets Check"
          # Check for common secret patterns in Kotlin backend code
          find backend/src -name "*.kt" | xargs grep -n -i -E "(password|secret|key|token|api_key)" | grep -v "test\|Test" || echo "No hardcoded secrets found"
          echo "::endgroup::"

      - name: Run Semgrep (Static Analysis) on Backend
        run: |
          echo "::group::Semgrep - Static Application Security Testing"
          pip install semgrep
          semgrep --config=auto --json --output=backend-semgrep-report.json backend/src/ || true
          semgrep --config=auto backend/src/ || true
          echo "::endgroup::"

      - name: Upload Backend Security Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-security-reports
          path: |
            backend/build/reports/detekt/
            backend-semgrep-report.json
          retention-days: 30

  # Android App Security Analysis
  android-security:
    name: Android Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Run Detekt (Kotlin Static Analysis)
        run: |
          echo "::group::Detekt - Kotlin Static Analysis with Security Rules"
          ./gradlew detekt --continue || true
          echo "::endgroup::"

      - name: Check for Hardcoded Secrets in Android Code
        run: |
          echo "::group::Android Secrets Check"
          # Check for common secret patterns in Android code
          find app/src -name "*.kt" -o -name "*.java" -o -name "*.xml" | xargs grep -n -i -E "(password|secret|key|token|api_key)" | grep -v "BuildConfig\|test\|Test" || echo "No hardcoded secrets found"
          echo "::endgroup::"

      - name: Upload Android Security Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-security-reports
          path: |
            app/build/reports/detekt/
          retention-days: 30

  # Container Security Analysis
  container-security:
    name: Container Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build Backend Distribution
        run: ./gradlew :backend:distTar

      - name: Build Docker Image
        run: |
          cd backend
          docker build -t my-kitchen-backend:security-test .

      - name: Run Trivy Container Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'my-kitchen-backend:security-test'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Run Trivy Container Scan (Table Format)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'my-kitchen-backend:security-test'
          format: 'table'

      - name: Upload Container Security Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: container-security-reports
          path: trivy-results.sarif
          retention-days: 30

  # Secrets and License Scanning
  secrets-and-compliance:
    name: Secrets & License Compliance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run GitLeaks (Secrets Scanner)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Set up JDK for License Check
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Check Backend License Compliance
        run: |
          echo "::group::Backend Dependencies License Check"
          # Generate dependency report for license analysis
          ./gradlew :backend:dependencies --configuration runtimeClasspath > backend-dependencies.txt || true
          echo "Generated Backend dependency report for license analysis"
          echo "::endgroup::"

      - name: Check Android License Compliance
        run: |
          echo "::group::Android Dependencies License Check"
          # Generate dependency report for license analysis
          ./gradlew :app:dependencies --configuration releaseRuntimeClasspath > android-dependencies.txt || true
          echo "Generated Android dependency report for license analysis"
          echo "::endgroup::"

      - name: Upload Compliance Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: compliance-reports
          path: |
            backend-dependencies.txt
            android-dependencies.txt
          retention-days: 30

  # Security Summary
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [backend-security, android-security, container-security, secrets-and-compliance]
    if: always()

    steps:
      - name: Download All Security Reports
        uses: actions/download-artifact@v5

      - name: Generate Security Summary
        run: |
          echo "# Security Analysis Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "## Analysis Completed:" >> security-summary.md
          echo "- ✅ Backend Security Analysis (Kotlin)" >> security-summary.md
          echo "- ✅ Android Security Analysis (Kotlin)" >> security-summary.md
          echo "- ✅ Container Security Scanning" >> security-summary.md
          echo "- ✅ Secrets & License Compliance" >> security-summary.md
          echo "" >> security-summary.md
          echo "## Reports Generated:" >> security-summary.md
          echo "- Backend: Detekt, Semgrep, Unit Tests" >> security-summary.md
          echo "- Android: Detekt, Secrets Check" >> security-summary.md
          echo "- Container: Trivy vulnerability scan" >> security-summary.md
          echo "- Compliance: GitLeaks, License analysis" >> security-summary.md
          echo "" >> security-summary.md
          echo "Review the detailed reports in the workflow artifacts." >> security-summary.md

          cat security-summary.md

      - name: Upload Security Summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 30
