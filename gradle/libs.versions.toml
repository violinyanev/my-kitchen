[versions]
# Unused
javaTargetVersion = "VERSION_11"
javaSourceVersion = "VERSION_11"
jvmToolchain = "11"

agp = "8.3.0"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.1"
# androidx-appcompat = "1.7.0"
# androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.6.1"
# androidx-test-junit = "1.2.0"
compose-plugin = "1.6.11"
junit = "4.13.2"
kotlin = "2.0.0"
assertk = "0.28.1"
# coreKtx = "1.6.1"
composeLatest = "1.6.8"
napierLogging = "2.7.1"

# Ours
# activityCompose = "1.9.1"

# @keep
composeBom = "2024.06.00"
# compose-compiler = "1.5.13"
# constraintLayoutCompose = "1.0.1"
coreTesting = "2.2.0"
coroutines = "1.8.1"
# espressoCore = "3.6.1"
ktor = "2.3.12"
koin = "3.6.0-alpha3"
koinAnnotations = "1.3.1"
mockk = "1.13.12"
turbine = "1.1.0"
truth = "1.4.2"
ktlint = "11.6.1"
detekt = "1.23.6"
twitterDetekt = "0.0.26"
# ktx = "1.13.1"
# lifecycle = "2.8.4"
# material = "1.12.0"
material3 = "1.2.1"
buildHealth = "1.33.0"

# @keep
# monitor = "1.7.1"
navigation = "2.7.7"
# pagingCompose = "3.3.1"
room = "2.7.0-alpha01"
sqlite = "2.5.0-SNAPSHOT"

# @keep
# testExtJunit = "1.2.1"
# viewModelCompose = "2.8.4"
work = "2.9.1"
ksp = "2.0.0-1.0.21"
kover = "0.8.2"
runner = "1.6.1"


lifecycleViewModel = "2.8.0-rc01"
koinCompose = "3.6.0-alpha3"
koinComposeMultiplatform = "1.2.0-alpha3"
navigationCompose = "2.7.0-alpha03"

[libraries]

# Basic/standard

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
# kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
# androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
# androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
# androidx-material = { group = "com.google.android.material", name = "material", version.ref = "material" }
# androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
# compose-ui-test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "composeLatest" }
# compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "composeLatest" }
# core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "coreKtx" }

# NEW

navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycleViewModel"}
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinComposeMultiplatform" }
napier-logging = { module = "io.github.aakira:napier", version.ref = "napierLogging" }
# koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koinAnnotations" }
# koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koinAnnotations" }
# koin-test-junit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin" }

# Room

room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
# room-runtime-android = { module = "androidx.room:room-runtime-android", version.ref = "room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }
# androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

# Ours
androidx-arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
# androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "composeLatest" }
# androidx-compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "composeLatest" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
androidx-compose-material-icons-ext = { module = "androidx.compose.material:material-icons-extended", version.ref = "composeLatest" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "composeLatest" }
# androidx-compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "composeLatest" }
# androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "composeLatest" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "composeLatest" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
# androidx-compose-ui-viewbinding = { module = "androidx.compose.ui:ui-viewbinding" }
# androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintLayoutCompose" }
# androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
# androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "viewModelCompose" }
# androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
# androidx-monitor = { module = "androidx.test:monitor", version.ref = "monitor" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
# androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }
androidx-work-testing = { module = "androidx.work:work-testing", version.ref = "work" }
# androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }

ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
# kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

detektFormattingPlugin = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detektTwitterPlugin = { module = "com.twitter.compose.rules:detekt", version.ref = "twitterDetekt" }
androidx-runner = { group = "androidx.test", name = "runner", version.ref = "runner" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin"}
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}
build-health = {id = "com.autonomousapps.dependency-analysis", version.ref = "buildHealth"}
